// Mocks generated by Mockito 5.4.4 from annotations
// in expense_tracker/test/data/repositories/transaction_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:expense_tracker/data/hive_database.dart' as _i3;
import 'package:expense_tracker/domain/budget.dart' as _i6;
import 'package:expense_tracker/domain/category.dart' as _i5;
import 'package:expense_tracker/domain/transaction.dart' as _i4;
import 'package:hive/hive.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBox_0<E> extends _i1.SmartFake implements _i2.Box<E> {
  _FakeBox_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HiveDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockHiveDatabase extends _i1.Mock implements _i3.HiveDatabase {
  MockHiveDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Box<_i4.Transaction> get transactionBox => (super.noSuchMethod(
        Invocation.getter(#transactionBox),
        returnValue: _FakeBox_0<_i4.Transaction>(
          this,
          Invocation.getter(#transactionBox),
        ),
      ) as _i2.Box<_i4.Transaction>);

  @override
  _i2.Box<_i5.Category> get categoryBox => (super.noSuchMethod(
        Invocation.getter(#categoryBox),
        returnValue: _FakeBox_0<_i5.Category>(
          this,
          Invocation.getter(#categoryBox),
        ),
      ) as _i2.Box<_i5.Category>);

  @override
  _i2.Box<_i6.Budget> get budgetBox => (super.noSuchMethod(
        Invocation.getter(#budgetBox),
        returnValue: _FakeBox_0<_i6.Budget>(
          this,
          Invocation.getter(#budgetBox),
        ),
      ) as _i2.Box<_i6.Budget>);

  @override
  _i7.Future<void> addTransaction(_i4.Transaction? transaction) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTransaction,
          [transaction],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i4.Transaction? getTransaction(String? id) =>
      (super.noSuchMethod(Invocation.method(
        #getTransaction,
        [id],
      )) as _i4.Transaction?);

  @override
  _i7.Future<void> updateTransaction(_i4.Transaction? transaction) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTransaction,
          [transaction],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> deleteTransaction(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteTransaction,
          [id],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  List<_i4.Transaction> getAllTransactions() => (super.noSuchMethod(
        Invocation.method(
          #getAllTransactions,
          [],
        ),
        returnValue: <_i4.Transaction>[],
      ) as List<_i4.Transaction>);

  @override
  _i7.Future<void> addCategory(_i5.Category? category) => (super.noSuchMethod(
        Invocation.method(
          #addCategory,
          [category],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i5.Category? getCategory(String? id) =>
      (super.noSuchMethod(Invocation.method(
        #getCategory,
        [id],
      )) as _i5.Category?);

  @override
  _i7.Future<void> updateCategory(_i5.Category? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCategory,
          [category],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> deleteCategory(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteCategory,
          [id],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  List<_i5.Category> getAllCategories() => (super.noSuchMethod(
        Invocation.method(
          #getAllCategories,
          [],
        ),
        returnValue: <_i5.Category>[],
      ) as List<_i5.Category>);

  @override
  _i7.Future<void> addBudget(_i6.Budget? budget) => (super.noSuchMethod(
        Invocation.method(
          #addBudget,
          [budget],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i6.Budget? getBudget(String? id) => (super.noSuchMethod(Invocation.method(
        #getBudget,
        [id],
      )) as _i6.Budget?);

  @override
  _i7.Future<void> updateBudget(_i6.Budget? budget) => (super.noSuchMethod(
        Invocation.method(
          #updateBudget,
          [budget],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> deleteBudget(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteBudget,
          [id],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  List<_i6.Budget> getAllBudgets() => (super.noSuchMethod(
        Invocation.method(
          #getAllBudgets,
          [],
        ),
        returnValue: <_i6.Budget>[],
      ) as List<_i6.Budget>);
}
